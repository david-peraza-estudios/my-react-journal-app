{"version":3,"sources":["firebase/firebase-config.js","types/types.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["db","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","googleAuthProvider","GoogleAuthProvider","types","uiSetError","err","type","payload","auth","getAuth","login","uid","displayName","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","user","catch","console","log","Swal","fire","icon","title","text","message","finally","startLogout","signOut","error","useForm","initialState","useState","values","setValues","reset","newFormSate","handleInputChange","target","name","value","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","e","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","a","updateProfile","currentUser","errorCode","code","errorMessage","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","loadNotes","getDocs","collection","querySnapshot","notes","forEach","doc","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","addNewNote","note","activeNote","setNotes","startSaveNote","getState","url","noteToFirestore","notesRef","updateDoc","refreshNote","position","showConfirmButton","timer","deleteNote","JournalEntry","date","noteDate","moment","newNote","style","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","Date","getTime","addDoc","docRef","NotesAppBar","active","display","files","allowOutsideClick","willOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","deleteDoc","startDeleteNote","NothingSelected","JournalScreen","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","localStorage","setItem","location","pathname","AppRouter","checking","setChecking","loggedIn","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5131bd22.chunk.js","sourcesContent":["import 'firebase/firestore';\r\nimport 'firebase/auth';\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { GoogleAuthProvider } from 'firebase/auth';\r\n\r\n \r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA-G3hP-rbC_OwYWyYYXnKBnTn48j31o-8\",\r\n  authDomain: \"curso-react-fh-50afa.firebaseapp.com\",\r\n  projectId: \"curso-react-fh-50afa\",\r\n  storageBucket: \"curso-react-fh-50afa.appspot.com\",\r\n  messagingSenderId: \"1037797384180\",\r\n  appId: \"1:1037797384180:web:fade7a2eb8ab1fea1ea3a1\"\r\n};\r\n\r\n \r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n \r\nconst db = getFirestore();\r\n \r\nconst googleAuthProvider = new GoogleAuthProvider();\r\n \r\nexport{\r\n    db,\r\n    googleAuthProvider\r\n}","\r\nexport const types = {\r\n    // authReducer types\r\n    login: '[Auth] Login',\r\n    logout: '[Auth Logout] Logout',\r\n\r\n    // uiReducer types\r\n    // error\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    // loading\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n\r\n    // notesReducer types\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n\r\n}","import { types } from '../types/types';\r\n\r\n\r\nexport const uiSetError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n})\r\n\r\nexport const uiRemoveError = () => ({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading,\r\n    payload: true\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading,\r\n    payload: false\r\n})\r\n\r\n","import { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithPopup, updateProfile, signOut } from 'firebase/auth';\r\nimport { googleAuthProvider } from '../firebase/firebase-config';\r\nimport { types } from '../types/types';\r\nimport { finishLoading, startLoading } from './ui';\r\nimport Swal from 'sweetalert2';\r\n\r\n// Variable AUTH de Firebase --> v8 es firebase.auth();\r\nconst auth = getAuth();\r\n\r\n// Esta es la ACTION que vamos a llamar cuando tengamos el uid y el displayName\r\n// como el return va a ir al Reducer, usamos los types y el payload\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName,\r\n    }\r\n});\r\n\r\n\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then(async ({ user }) => {\r\n                // Signed in\r\n\r\n                //como displayName va a ser null, le asignamos el name del formulario de registro\r\n                await updateProfile(auth.currentUser, { displayName: name });\r\n\r\n                //y hacemos login después del registro para actualizar el state\r\n                dispatch(login(user.uid, user.displayName));\r\n                console.log(user);\r\n                // ...\r\n            })\r\n            .catch((err) => {\r\n                const errorCode = err.code;\r\n                console.log(errorCode);\r\n                const errorMessage = err.message;\r\n                console.log(errorMessage);\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: err.message,\r\n                  });\r\n                // ..\r\n            });\r\n    }\r\n}\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n\r\n    return (dispatch) => {\r\n\r\n        dispatch(startLoading());\r\n\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: err.message,\r\n                  });\r\n            })\r\n            .finally(() => {\r\n                dispatch(finishLoading());\r\n            })\r\n\r\n    };\r\n}\r\n\r\n\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        signInWithPopup(auth, googleAuthProvider)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName))\r\n            });\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.logout\r\n});\r\n\r\nconst notesLogout = () => ({\r\n    type: types.notesLogoutCleaning,\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch) => {\r\n        signOut(auth).then(() => {\r\n            // Sign-out successful.\r\n            dispatch(logout()); // => authReducer\r\n\r\n            //Purgar notas del store => notesReducer\r\n            dispatch(notesLogout());\r\n\r\n          }).catch((error) => {\r\n            // An error happened.\r\n          });\r\n    }\r\n};","import { useState } from 'react';\r\n\r\n//Custom Hook que se va a encargar de manejar la lógica de los formularios\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    //En el initialState recibiríamos el valor de \r\n    // los input del formulario (name, email, password)\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    //reset para resetear el formulario con los valores que queramos enviar\r\n    const reset = ( newFormSate = initialState) => {\r\n        setValues(newFormSate);\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    //retornamos un arreglo (también puede ser una string, objeto, etc)\r\n    return [values, handleInputChange, reset];\r\n    // 1er valor= values del formulario, \r\n    // 2do valor= manejadordeEvento\r\n    // 3er valor= para resetear \r\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    const { loading } = useSelector(state => state.ui);\n\n    const [formValues, handleInputChange] = useForm({\n        email: 'user5@gmail.com',\n        password: '123456'\n    });\n\n    const { email, password } = formValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch(startLoginEmailPassword(email, password));\n    }\n\n    const handleGoogleLogin = () => {\n        dispatch(startGoogleLogin());\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form\n                onSubmit={handleLogin}\n                className=\"animate__animated animate__fadeIn animate_faster\"\n            >\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled={loading} //nuevo\n                >\n                    Login\n                </button>\n\n\n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n\n                    <div\n                        className=\"google-btn\"\n                        onClick={handleGoogleLogin}\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link\n                    to=\"/auth/register\"\n                    className=\"link\"\n                >\n                    Create new account\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport validator from 'validator';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiRemoveError, uiSetError } from '../../actions/ui';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const { msgError } = useSelector(state => state.ui);\n\n\n    const [formValues, handleInputChange] = useForm({\n        name: 'Hernando',\n        email: 'nanod@gmail.com',\n        password: '123456',\n        password2: '123456'\n    });\n\n    const { name, email, password, password2 } = formValues;\n\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        // console.log(name, email, password, password2);\n\n        if (isFormValid()) {\n            dispatch(startRegisterWithEmailPasswordName(email, password, name));\n        }\n    }\n\n    const isFormValid = () => {\n        if (name.trim().length === 0) {\n            console.log('Name is required');\n            dispatch(uiSetError('Name is required'));\n            return false;\n        } else if (!validator.isEmail(email)) {\n            dispatch(uiSetError('Email is not valid'));\n            return false;\n        } else if (password !== password2 || password.length < 5) {\n            dispatch(uiSetError('Password inputs are incorrect or less than 6 characters'));\n            return false;\n        }\n        dispatch(uiRemoveError());\n        return true;\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n\n            <form\n                onSubmit={handleRegister}\n                className=\"animate__animated animate__fadeIn animate_faster\"\n            >\n                {\n                    // if msgError !== null --> lo muestra\n                    msgError &&\n                    (\n                        <div className=\"auth__alert-error\">\n                            {msgError}\n                        </div>\n                    )\n                }\n\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    onChange={handleInputChange}\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    onChange={handleInputChange}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                >\n                    Register\n                </button>\n\n\n\n                <Link\n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already registered?\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route \n                        exact\n                        path=\"/auth/login\"\n                        component={ LoginScreen }\n                    />\n\n                    <Route \n                        exact\n                        path=\"/auth/register\"\n                        component={ RegisterScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n                \n            </div>\n\n        </div>\n    )\n}\n","import { collection, getDocs } from \"firebase/firestore\";\r\nimport { db } from \"../firebase/firebase-config\";\r\n\r\nexport const loadNotes = async (uid) => { //uid de notes para contruir el path\r\n\r\n    const querySnapshot = await getDocs(collection(db, `${uid}/journal/notes`));\r\n    const notes = [];\r\n    querySnapshot.forEach((doc) => {\r\n        // doc.data() is never undefined for query doc snapshots\r\n\r\n        //cada note la agregamos a notes[]\r\n        notes.push({\r\n            id: doc.id,\r\n            ...doc.data()\r\n        });\r\n\r\n    });\r\n\r\n    console.log(notes);\r\n    return notes;\r\n}\r\n","\r\nexport const fileUpload = async (file) => {\r\n\r\n    const cloudUrl = `https://api.cloudinary.com/v1_1/datrkzch3/upload`;\r\n\r\n    // Usar formData para enviar request de ficheros y parametros\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'udemy-react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            // Una URL que nos da la data con nuestra misma imagen \r\n            //pero distinta url para asegurar la subida\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (err) {\r\n        throw err;\r\n    }\r\n}","import Swal from 'sweetalert2';\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { collection, doc, addDoc, updateDoc, deleteDoc } from \"firebase/firestore\";\r\nimport { types } from \"../types/types\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { fileUpload } from '../helpers/fileUpload';\r\n\r\n// udemy-react-journal\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => { //ponemos el async por la promesa de la db\r\n        const { uid } = getState().auth;\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        //Como devuelve una promesa hay que usar un ASYNC AWAIT\r\n        // coleccion = collection(base de datos, ruta de la colección )\r\n        // addDoc ( coleccion, documento-objeto de campos- )\r\n        const docRef = await addDoc(\r\n            collection(db, `${uid}/journal/notes`),\r\n            newNote\r\n        );\r\n        // console.log(\"Document written with ID: \", docRef.id);\r\n\r\n        dispatch(activeNote(docRef.id, newNote));\r\n        dispatch(addNewNote(docRef.id, newNote));\r\n\r\n    }\r\n\r\n}\r\n\r\nconst addNewNote = ( id, note) => ({\r\n        type: types.notesAddNew,\r\n        payload: {\r\n            id, ...note\r\n        }\r\n});\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: [...notes]\r\n})\r\n\r\n// Se encarga de hacer el asyn await de cargar las notas\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n}\r\n\r\n//Grabar en la DB: usamos el middleware THUNK porque es async\r\nexport const startSaveNote = (note) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        if (!note.url) {\r\n            delete note.url\r\n        }\r\n\r\n        //quitar id nota para no guardar en firestore\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        const notesRef = doc(db, `${uid}/journal/notes/${note.id}`);\r\n        await updateDoc(notesRef, noteToFirestore);\r\n        dispatch(refreshNote(note.id, note));\r\n        Swal.fire({\r\n            position: 'top-end',\r\n            icon: 'success',\r\n            title: 'Your note has been saved',\r\n            showConfirmButton: false,\r\n            timer: 1200\r\n        })\r\n    }\r\n}\r\n\r\n//refrescar 1 sola nota\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, note\r\n    }\r\n})\r\n\r\nexport const startUploading = (file) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const activeNote = getState().notes.active;\r\n        const fileUrl = await fileUpload(file);\r\n        console.log(fileUrl);\r\n\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch(startSaveNote(activeNote));\r\n\r\n\r\n        //quitar loading de Swal\r\n        Swal.close();\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const startDeleteNote = (id) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        await deleteDoc(doc(db, `${uid}/journal/notes/${id}`));\r\n\r\n        dispatch(deleteNote(id));\r\n\r\n        Swal.fire({\r\n            position: 'top-end',\r\n            icon: 'success',\r\n            title: 'Your note has been deleted',\r\n            showConfirmButton: false,\r\n            timer: 1200\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\n\r\n","import React from 'react';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n\n    const noteDate = moment(date);\n    const dispatch = useDispatch();\n\n    const handleEntryClick = () => {\n        const newNote = {\n            id,\n            title,\n            body,\n            date,\n            url\n        }\n        console.log(newNote);\n        dispatch(activeNote(id, newNote));\n    }\n\n    return (\n        <div\n            className=\"journal__entry pointer animate__animated animate__fadeInDown animate__faster\"\n            onClick={handleEntryClick}\n        >\n            {\n                url &&\n                <div\n                    className=\"journal__entry-picture\"\n                    style={{\n                        backgroundSize: 'cover',\n                        backgroundImage: `url(${url})`, //aqui\n                    }}\n                ></div>\n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    {title /* aqui */}\n                </p>\n                <p className=\"journal__entry-content\">\n                    {body}\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>{noteDate.format(`dddd`) /*Dia de la semana */}</span>\n                <h4>{noteDate.format(`Do`) /*Número día del mes */}</h4>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const { notes } = useSelector(state => state.notes)\n\n    return (\n        <div className=\"journal__entries\">\n\n            {\n            notes &&\n                notes.map(note => (\n                    <JournalEntry\n                        key={note.id}\n                        {...note} // extraemos todas las propiedades de notes\n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { JournalEntries } from './JournalEntries'\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector(state => state.auth)\n\n    const handleLogout = () => {\n        dispatch(startLogout());\n    }\n\n    const handleAddNew = () =>{\n        dispatch(startNewNote()); //funcion action de notes.js\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> {name}</span>\n                </h3>\n\n                <button\n                    className=\"btn\"\n                    onClick={handleLogout}\n                >\n                    Logout\n                </button>\n            </div>\n\n            <div\n                className=\"journal__new-entry\"\n                onClick={handleAddNew} // nuevo\n            >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New entry\n                </p>\n            </div>\n\n            <JournalEntries />\n\n        </aside>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startSaveNote, startUploading } from '../../actions/notes';\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch();\n    const { active } = useSelector(state => state.notes);\n\n    const handlePictureClick = () => {\n        document.querySelector('#fileSelector').click();\n    }\n\n    const handleFileChange = (e) => {\n        //Podriamos establecer un .length para que \n        //  solo tomamos el archivo en la primera posición\n        const file = e.target.files[0];\n\n        //Si el usuario no ha dado a cancelar, es que existe el archivo...\n        if (file) {\n            dispatch(startUploading( file))\n        }\n    }\n    const handleSave = () => {\n        dispatch(startSaveNote(active));\n    }\n    return (\n        <div className=\"notes__appbar\">\n            <span>28 de agosto 2020</span>\n            < input\n                id=\"fileSelector\"\n                type=\"file\"\n                name=\"file\"\n                style={{ display: 'none' }}\n                onChange={handleFileChange}\n\n            />\n            <div>\n                <button\n                    className=\"btn\"\n                    onClick={handlePictureClick}\n                >\n                    Picture\n                </button>\n\n                <button\n                    className=\"btn\"\n                    onClick={handleSave}\n                >\n                    Save\n                </button>\n            </div>\n        </div >\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NotesAppBar } from './NotesAppBar';\nimport { activeNote, startDeleteNote } from '../../actions/notes';\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch();\n\n    //renombramos notes.active a note\n    const { active: note } = useSelector(state => state.notes);\n    const [formValues, handleInputChange, reset] = useForm(note);\n\n\n    //useEffect para cambiar por pantalla la nota activa\n    const activeId = useRef(note.id);\n    useEffect(() => {\n        if (note.id !== activeId.current) {\n            reset(note);\n            activeId.current = note.id;\n        }\n    }, [note, reset]);\n\n    //useEffect para actualizar la info de la nota en el store --> notes\n    useEffect(() => {\n        dispatch(activeNote(formValues.id, { ...formValues }));\n    }, [formValues, dispatch]);\n\n\n    const { title, body, id} = formValues;\n\n    const handleDelete = () => {\n        dispatch(startDeleteNote(id));\n    }\n\n    return (\n        <div className=\"notes__main-content\">\n\n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n\n                <input\n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    name=\"title\"\n                    value={title}\n                    onChange={handleInputChange}\n                />\n\n                <textarea\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                    name=\"body\"\n                    value={body}\n                    onChange={handleInputChange}\n                ></textarea>\n                {\n                    (note.url) &&\n                    (\n                        <div className=\"notes__image\">\n                            <img\n                                src={note.url}\n                                alt=\"imagen\"\n                            />\n                        </div>\n                    )\n                }\n                <button\n                    className=\"btn btn-danger\"\n                    onClick={handleDelete}\n                >\n                    Delete\n                </button>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br />\n                pr create an entry!\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { useSelector } from 'react-redux';\nimport { NothingSelected } from './NothingSelected';\n\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector(state => state.notes)\n\n    return (\n        <div className=\"journal__main-content\">\n\n            <Sidebar />\n\n            <main>\n                {\n                    (active)\n                        ? (<NoteScreen />)\n                        : (<NothingSelected />)\n                }\n            </main>\n\n        </div>\n    )\n}\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (!isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n// Comprobamos los Functional Components como funciones (func)\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n   localStorage.setItem('lastPath', rest.location.pathname);\r\n\r\n    return (\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/auth/login\" />) // en lugar de /login en esta app es /auth/login\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n// Comprobamos los Functional Components como funciones (func)\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n} from 'react-router-dom';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { AuthRouter } from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\nimport { startLoadingNotes } from '../actions/notes';\n\n\nexport const AppRouter = () => {\n\n    const [checking, setChecking] = useState({ loading: true });\n    const [isLoggedIn, setIsLoggedIn] = useState({ loggedIn: false });\n\n    const dispatch = useDispatch();\n\n    const auth = getAuth();\n    useEffect(() => {\n        onAuthStateChanged(auth, (user) => {\n            if (user?.uid) {\n\n                console.log(user);\n                dispatch(login(user.uid, user.displayName));\n\n                setIsLoggedIn({ loggedIn: true }); // Usuario ha logeado\n\n                dispatch(startLoadingNotes( user.uid));\n\n            } else {\n                console.log('user has signed out');\n                setIsLoggedIn({ loggedIn: false });\n            }\n\n            // Mientras esperamos a que empiece la respuesta del observable --> checking false\n            setChecking({ loading: false });\n\n        });\n    }, [dispatch, setChecking, setIsLoggedIn]);\n\n    if (checking.loading) { //si está comprobando--> pantalla cargando, si no--> router: /login\n        return (\n            <h1> Checking...</h1>\n        )\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        isAuthenticated={isLoggedIn.loggedIn}\n                        path=\"/auth\"\n                        component={AuthRouter}\n                    />\n\n                    <PrivateRoute\n                        isAuthenticated={isLoggedIn.loggedIn}\n                        exact\n                        path=\"/\"\n                        component={JournalScreen}\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n/*\r\n{\r\n    notes: [],\r\n    active: null,\r\n    active: {\r\n        id:\r\n        title\r\n        body:\r\n        imageUrl:\r\n        date:\r\n    }\r\n\r\n}\r\n*/\r\nconst initialState = {\r\n    notes: [],\r\n    active: null,\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        case types.notesUpdated:\r\n            // utilizamos el id para refrescar la nota indicada\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null, // Esta nota no puede estar activa porque se está borrando\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers, createStore, applyMiddleware, compose } from 'redux'\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    /*preloadState */\r\n    reducers,\r\n\r\n    /* Para la extension Redux DevTools para Chrome y Redux thunks*/\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n\r\n);\r\n","import { types } from \"../types/types\";\r\n\r\n/* state =\r\n    {\r\n        uid: 'jsjdsd12123dsak3',\r\n        name: 'Fernando'\r\n    }\r\n*/\r\n\r\nexport const authReducer = (state = { }, action) => {\r\n    \r\n    switch (action.type) {\r\n    //Esto es por ->  dispatch(function(action))\r\n        // Y la action tiene un type: types.xxxx\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return {}\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import React from 'react';\nimport { AppRouter } from './routers/AppRouter';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\n\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}